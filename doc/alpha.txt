*alpha.txt*
*alpha*
==============================================================================
CONTENTS                                                        *alpha-contents*

    INTRO .......................................... |alpha-intro|
    COMMANDS ....................................... |alpha-commands|
    OPTIONS ........................................ |alpha-options|
    AUTOCMD ........................................ |alpha-autocmd|
    COLORS ......................................... |alpha-colors|
    EXAMPLE ........................................ |alpha-example|

==============================================================================
INTRO                                                              *alpha-intro*

alpha is a plugin that shows a customizable greeter screen when neovim is
launched.

==============================================================================
COMMANDS                                                        *alpha-commands*
>
    :Alpha
Open the alpha buffer.

>
    :AlphaRedraw
Trigger a redraw while in the alpha buffer.
==============================================================================
CONFIGURATION                                              *alpha-configuration*

alpha uses gamma-ui to build its ui. see :h gamma-ui

==============================================================================
EXAMPLE                                                          *alpha-example*

For the default configuration, see the Quick Start guide in the README.md
>
>
 use {
     "goolord/alpha-nvim",
     config = function ()
         local alpha = require'alpha'
         local dashboard = require'alpha.themes.dashboard'
         dashboard.section.header.val = {
             [[                               __                ]],
             [[  ___     ___    ___   __  __ /\_\    ___ ___    ]],
             [[ / _ `\  / __`\ / __`\/\ \/\ \\/\ \  / __` __`\  ]],
             [[/\ \/\ \/\  __//\ \_\ \ \ \_/ |\ \ \/\ \/\ \/\ \ ]],
             [[\ \_\ \_\ \____\ \____/\ \___/  \ \_\ \_\ \_\ \_\]],
             [[ \/_/\/_/\/____/\/___/  \/__/    \/_/\/_/\/_/\/_/]],
         }
         dashboard.section.buttons.val = {
             dashboard.button( "e", "  New file" , ":ene <BAR> startinsert <CR>"),
             dashboard.button( "q", "  Quit NVIM" , ":qa<CR>"),
         }
         local handle = io.popen('fortune')
         local fortune = handle:read("*a")
         handle:close()
         dashboard.section.footer.val = fortune
         alpha.setup(dashboard.opts)
     end
 }
<

Example with the startify theme:
>
    use {
        "goolord/alpha-nvim",
        requires = { 'kyazdani42/nvim-web-devicons' },
        config = function ()
            local alpha = require'alpha'
            local startify = require'alpha.themes.startify'
            startify.section.header.val = {
                [[                                   __                ]],
                [[      ___     ___    ___   __  __ /\_\    ___ ___    ]],
                [[     / _ `\  / __`\ / __`\/\ \/\ \\/\ \  / __` __`\  ]],
                [[    /\ \/\ \/\  __//\ \_\ \ \ \_/ |\ \ \/\ \/\ \/\ \ ]],
                [[    \ \_\ \_\ \____\ \____/\ \___/  \ \_\ \_\ \_\ \_\]],
                [[     \/_/\/_/\/____/\/___/  \/__/    \/_/\/_/\/_/\/_/]],
            }
            startify.section.top_buttons.val = {
                startify.button( "e", "  New file" , ":ene <BAR> startinsert <CR>"),
            }
            -- disable MRU
            startify.section.mru.val = { { type = "padding", val = 0 } }
            -- disable MRU cwd
            startify.section.mru_cwd.val = { { type = "padding", val = 0 } }
            -- disable nvim_web_devicons
            startify.nvim_web_devicons.enabled = false
            -- startify.nvim_web_devicons.highlight = false
            -- startify.nvim_web_devicons.highlight = 'Keyword'
            --
            startify.section.bottom_buttons.val = {
                startify.button( "q", "  Quit NVIM" , ":qa<CR>"),
            }
            startify.section.footer = {
                { type = "text", val = "footer" },
            }
            alpha.setup(startify.opts)
        end
    }
<

==============================================================================
FAQ                                                                  *alpha-faq*


How to work with indentLine plugin?~

    Disable the plugin while in alpha:
  >
    let g:indentLine_fileTypeExclude = ['alpha']
    or
    vim.g.indentLine_fileTypeExclude = { 'alpha' }

How to disable the tabline in alpha buffer?~
  >
    autocmd FileType alpha set showtabline=0 | autocmd BufUnload <buffer> set showtabline=2

==============================================================================

vim:tw=78:sw=4:ts=8:ft=help:norl:
